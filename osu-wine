#!/usr/bin/env bash

## Welcome to your osu! launch script!
## Most stuff here is explained with comments, but if you just need to add
## any argument before osu!, use #LAUNCH_ARGS!

# For reference: export A="${A:-}" means use "A" if already set, otherwise use the value after ":-" for the variable
# Example: enable WINENTSYNC by running `WINENTSYNC=1 osu-wine` in a terminal, 
#                            or by changing the line to `export WINENTSYNC="${WINENTSYNC:-1}"`

# Customization and and performance configuration options are here:

LAUNCH_ARGS="" # Put arguments like prime-run, gamemoderun, or mangohud in between the quotes here!

 # Set this to your external disk paths if you use symlinks!
export PRESSURE_VESSEL_FILESYSTEMS_RW="${PRESSURE_VESSEL_FILESYSTEMS_RW:-}"

# Set this to 1 or 2 to play with absolute mode in OTD on Wayland (if this doesn't work, check the "Tablet issues" page in the osu-winello wiki)
export WINE_ENABLE_ABS_TABLET_HACK="${WINE_ENABLE_ABS_TABLET_HACK:-0}" 
# Set this to 1 to enable Windows fonts/boss key, but it might cause crashes in future updates! Revert back if so.
export WINE_BLOCK_GET_VERSION="${WINE_BLOCK_GET_VERSION:-0}"
# Set this to 1 to force fixes for alt-tab (only if needed!)
export WINE_ENABLE_OSU_FOCUS_FIX="${WINE_ENABLE_OSU_FOCUS_FIX:-0}"

# Enables NTsync (when possible, requires Linux >=6.14 or the DKMS module installed)
export WINENTSYNC="${WINENTSYNC:-0}"
# Enables Fsync (when possible)
export WINEFSYNC="${WINEFSYNC:-1}"
# Enables Esync (when possible)
export WINEESYNC="${WINEESYNC:-1}"

# Uncomment the line below to try the native winewayland.drv driver (unsupported, but feel free to experiment if you're on Wayland)
# export DISPLAY=

# Set custom logging channels for Wine
export WINEDEBUG="${WINEDEBUG:-}"

# Disables vsync for mesa
export vblank_mode="${vblank_mode:-0}"
# Put true after :- to enable threaded OpenGL optimizations for AMD/Intel
# (unsupported, use at your own risk! May INCREASE FPS, but may also INCREASE input latency due to multithreading overhead)
export mesa_glthread="${mesa_glthread:-}"

# Disables vsync for NVIDIA >=510
export __GL_SYNC_TO_VBLANK="${__GL_SYNC_TO_VBLANK:-0}"
# Put 1 after :- to enable threaded OpenGL optimizations for NVIDIA
# (unsupported, use at your own risk! May INCREASE FPS, but may also INCREASE input latency due to multithreading overhead)
export __GL_THREADED_OPTIMIZATIONS="${__GL_THREADED_OPTIMIZATIONS:-}"
# Put 1 after :- to minimize the pre-rendered frames for NVIDIA (driver default is 2, 0 does nothing)
# (unsupported, use at your own risk! Will LOWER FPS for a slightly LOWER input latency)
export __GL_MaxFramesAllowed="${__GL_MaxFramesAllowed:-}"

###################################################################################################
# osu-winello internal variables, you probably don't have to touch these!
###################################################################################################

export XDG_DATA_HOME="${XDG_DATA_HOME:-$HOME/.local/share}"
export BINDIR="${BINDIR:-$HOME/.local/bin}"

export YAWL_PATH="$XDG_DATA_HOME/osuconfig/yawl-winello"
export WINESERVER_PATH="${YAWL_PATH}server"
export WINE_PATH="$XDG_DATA_HOME/osuconfig/wine-osu"
export WINEPREFIX="$XDG_DATA_HOME/wineprefixes/osu-wineprefix"

export WINEDLLOVERRIDES="winemenubuilder.exe=;" # Blocks wine from creating .desktop files

OSUDOWNLOADURL="https://m1.ppy.sh/r/osu!install.exe"
IFS=" " read -r -a PRE_ARGS <<<"env ${LAUNCH_ARGS}"

[ -r "$XDG_DATA_HOME/osuconfig/osupath" ] && OSUPATH=$(</"$XDG_DATA_HOME/osuconfig/osupath")
export OSUPATH

# Get the Windows-formatted paths to osu! and its install directory
[ -r "$XDG_DATA_HOME/osuconfig/.osu-path-winepath" ] && read -r OSU_WINEDIR <<<"$(cat "$XDG_DATA_HOME/osuconfig/.osu-path-winepath")"
[ -r "$XDG_DATA_HOME/osuconfig/.osu-exe-winepath" ] && read -r OSU_WINEEXE <<<"$(cat "$XDG_DATA_HOME/osuconfig/.osu-exe-winepath")"

###################################################################################################
# Helper functions for the launcher script
###################################################################################################

Info() {
    echo -e '\033[1;34m'"Winello:\033[0m $*"
}

Warning() {
    echo -e '\033[0;33m'"Winello:\033[0m $*"
}

Error() {
    echo -e '\033[1;31m'"Script failed:\033[0m $*"
    exit 1
}

Help() {
    Info "Script features:
    osu-wine: Runs osu!
    osu-wine --winecfg : Runs winecfg on the osu! Wineprefix
    osu-wine --winetricks: Install packages on osu! Wineprefix
    osu-wine --regedit: Opens regedit on osu! Wineprefix
    osu-wine --kill: Kills osu! and related processes in osu! Wineprefix
    osu-wine --kill9: Kills osu! but with wineserver -k9
    osu-wine --update: Updates proton-osu (and optionally, the osu-wine script) to upstream
    osu-wine --fixprefix: Reinstalls the osu! Wineprefix from system
    osu-wine --fix-yawl: Reinstalls files related to yawl and the Steam Runtime in case something went wrong
    osu-wine --fixfolders: Reinstalls registry keys for native file manager in case they break
    osu-wine --fixrpc: Reinstalls rpc-bridge if needed!
    osu-wine --info: Troubleshooting and more info
    osu-wine --remove: Uninstalls osu! and the script
    osu-wine --changedir: Changes directory of the install according to the user
    osu-wine --devserver <address>: Runs osu with an alternative server (e.g. --devserver akatsuki.gg)
    osu-wine --runinprefix <file>: Launches a custom executable within osu!'s Wineprefix
    osu-wine --osuhandler <beatmap, skin..>: Launches osu-handler-wine with the specified file/link
    osu-wine --gosumemory: Installs and runs gosumemory without any needed config!
    osu-wine --tosu: Installs and runs tosu without any needed config!
    osu-wine --disable-memory-reader: Turn off gosumemory and tosu"
}

deleteFolder() {
    Info "Do you want to delete the previous install?"
    read -r -p "$(Info "Choose your option (y/N): ")" dirchoice

    if [ "$dirchoice" = 'y' ] || [ "$dirchoice" = 'Y' ]; then
        read -r -p "$(Info "Are you sure? This will delete your files! (y/N)")" dirchoice2

        if [ "$dirchoice2" = 'y' ] || [ "$dirchoice2" = 'Y' ]; then
            lastdir=$(</"$XDG_DATA_HOME/osuconfig/osupath")
            rm -rf "$lastdir/osu!" && Info "Cleaning done!"
        else
            Info "Skipping..."
        fi

    else
        Info "Skipping.."
    fi
}

Update() {
    local self
    self="$(realpath "$0")"
    git -C "$XDG_DATA_HOME/osuconfig/update" pull --quiet
    git -C "$XDG_DATA_HOME/osuconfig/update" reset --hard origin --quiet
    exec bash "$XDG_DATA_HOME/osuconfig/update/osu-winello.sh" update "${self}"
}

longPathsFix() {
    # Applying fix for long names/paths...
    rm -rf "$WINEPREFIX/dosdevices/d:"
    ln -s "$OSUPATH" "$WINEPREFIX/dosdevices/d:"
}

osuHandlerSetup() {
    # Fix to importing maps/skins/osu links after Stable update 20250122.1
    # This assumes the osu! folder is mounted at the D: drive (which Winello does in longPathsFix)
    git -C "$XDG_DATA_HOME/osuconfig/update" pull --quiet
    git -C "$XDG_DATA_HOME/osuconfig/update" reset --hard origin --quiet
    bash "$XDG_DATA_HOME/osuconfig/update/osu-winello.sh" osuhandler
}

InstallDxvk() {
    # Installing patched dxvk-osu binaries in Wineprefix
    git -C "$XDG_DATA_HOME/osuconfig/update" pull --quiet
    git -C "$XDG_DATA_HOME/osuconfig/update" reset --hard origin --quiet
    bash "$XDG_DATA_HOME/osuconfig/update/osu-winello.sh" installdxvk
}

folderFix() {
    # Applying fix for opening folders in the native file browser...
    git -C "$XDG_DATA_HOME/osuconfig/update" pull --quiet
    git -C "$XDG_DATA_HOME/osuconfig/update" reset --hard origin --quiet
    bash "$XDG_DATA_HOME/osuconfig/update/osu-winello.sh" fixfolders
}

fixRpc() {
    # reinstall discord rpc bridge
    if [ ! -f "${WINEPREFIX}/drive_c/windows/bridge.exe" ]; then
        git -C "$XDG_DATA_HOME/osuconfig/update" pull --quiet
        git -C "$XDG_DATA_HOME/osuconfig/update" reset --hard origin --quiet
    fi
    bash "$XDG_DATA_HOME/osuconfig/update/osu-winello.sh" discordrpc
}

SetupReader() {
    local READER_NAME="${1}"
    if [ ! -d "$XDG_DATA_HOME/osuconfig/$READER_NAME" ]; then
        git -C "$XDG_DATA_HOME/osuconfig/update" pull --quiet
        git -C "$XDG_DATA_HOME/osuconfig/update" reset --hard origin --quiet
        bash "$XDG_DATA_HOME/osuconfig/update/osu-winello.sh" "$READER_NAME"
    fi

    Info "Setting up $READER_NAME wrapper..."
    READER_PATH="$("$YAWL_PATH" winepath -w "$XDG_DATA_HOME/osuconfig/$READER_NAME/$READER_NAME.exe")"

    # launcher batch file which monitors osu! and closes gosumemory when osu! exits
    cat >"$OSUPATH/launch_with_memory.bat" <<EOF
@echo off
set NODE_SKIP_PLATFORM_CHECK=1
cd /d "$OSU_WINEDIR"
start "" "$OSU_WINEEXE" %*
start /b "" "$READER_PATH"

:loop
tasklist | find "osu!.exe" >nul
if ERRORLEVEL 1 (
    taskkill /F /IM $READER_NAME.exe >nul 2>&1
    exit
)
ping -n 5 127.0.0.1 >nul
goto loop
EOF

    Info "$READER_NAME wrapper enabled. Launch osu! normally to use it!"
}

LaunchWine() {
    local EXE_ARG="${YAWL_PATH}"
    declare -a POST_ARGS=("${@}")

    WINELLO_LOGS_PATH="${XDG_DATA_HOME}/osuconfig/winello.log"
    Info "The run log is located in ${WINELLO_LOGS_PATH}. Attach this file if you make an issue on GitHub or ask for help on Discord."
    Info "Launching: ${PRE_ARGS[*]} ${EXE_ARG} ${POST_ARGS[*]}"
    echo ""
    exec "${PRE_ARGS[@]}" "${EXE_ARG}" "${POST_ARGS[@]}" &>"${WINELLO_LOGS_PATH}"
}

LaunchOsu() {
    Info "Opening: $OSUPATH/osu!.exe"
    if [ -f "${OSUPATH}/launch_with_memory.bat" ]; then
        OSU_EXE=("${OSU_WINEDIR}launch_with_memory.bat")
        Info "Click here to open the tosu/gosumemory page: http://localhost:24050 or http://127.0.0.1:24050"
    else
        OSU_EXE=("C:\\windows\\system32\\start.exe" "/b" "/wait" "${OSU_WINEEXE}")
    fi

    export WINEDEBUG="+timestamp,+pid,+tid,+threadname,+debugstr,+loaddll,+winebrowser,+exec ${WINEDEBUG:-}"
    LaunchWine "${OSU_EXE[@]}" "${@}"
}

###################################################################################################
# Begin argument handling
###################################################################################################

case "$1" in
'')
    LaunchOsu
    ;;

    ###################################################################################################

'--devserver')
    if [ -z "$2" ]; then Error "You need to specify a server, e.g. --devserver akatsuki.gg"; fi
    LaunchOsu "-devserver" "$2"
    ;;

    ###################################################################################################

'--regedit')
    LaunchWine regedit
    ;;

    ###################################################################################################

'--winecfg')
    LaunchWine winecfg
    ;;

    ###################################################################################################

'--winetricks')
    WINE="$YAWL_PATH" winetricks "${@:2}"
    ;;

    ###################################################################################################

'--changedir')
    Info "Please choose your new directory:"

    newdir="$(zenity --file-selection --directory)"
    lastdir=$(</"$XDG_DATA_HOME/osuconfig/osupath")

    if [ ! -d "$newdir" ]; then
        Error "No folder selected, please make sure zenity is installed.."
    fi

    rm -f "$XDG_DATA_HOME/osuconfig/osupath"
    if [ -d "$newdir/osu!" ] || [ -s "$newdir/osu!.exe" ]; then
        Info "osu! folder/game already exists: skipping.."

        if [ -d "$newdir/osu!" ]; then
            OSUPATH="$newdir/osu!"
            echo "$OSUPATH" >"$XDG_DATA_HOME/osuconfig/osupath"

            Info "Change done from '$lastdir' to '$newdir'!"
            deleteFolder
        fi

        if [ -s "$newdir/osu!.exe" ]; then
            OSUPATH="$newdir"
            echo "$OSUPATH" >"$XDG_DATA_HOME/osuconfig/osupath"

            Info "Change done from '$lastdir' to '$newdir'!"
            deleteFolder
        fi
    else
        mkdir "$newdir/osu!"
        OSUPATH="$newdir/osu!"
        echo "$OSUPATH" >"$XDG_DATA_HOME/osuconfig/osupath"

        Info "Downloading osu! to your new install.."
        wget -O "$OSUPATH/osu!.exe" "${OSUDOWNLOADURL}" && wgetcheck6="$?"

        if [ ! "$wgetcheck6" = 0 ]; then
            Info "wget failed; trying with --no-check-certificate.."
            wget --no-check-certificate -O "$OSUPATH/osu!.exe" "${OSUDOWNLOADURL}"
        fi

        Info "Change done from '$lastdir' to '$newdir'!"
        deleteFolder
    fi

    longPathsFix

    {
        temp_winepath="$("$YAWL_PATH" winepath -w "$OSUPATH/")" &&
            echo -n "$temp_winepath" >"$XDG_DATA_HOME/osuconfig/.osu-path-winepath" &&
            echo -n "$temp_winepath\osu!.exe" >"$XDG_DATA_HOME/osuconfig/.osu-exe-winepath"
    } ||
        Error "Couldn't get the osu! path from winepath... Check $OSUPATH/osu!.exe ?"
    ;;

    ###################################################################################################

'--remove')
    bash "$XDG_DATA_HOME/osuconfig/update/osu-winello.sh" uninstall
    ;;

    ###################################################################################################

'--kill')
    "$WINESERVER_PATH" -k
    ;;

    ###################################################################################################

'--kill9')
    "$WINESERVER_PATH" -k9
    ;;

    ###################################################################################################

'--update')
    Update
    ;;

    ###################################################################################################

'--fixfolders')
    folderFix
    ;;

    ###################################################################################################

*fix*yawl*)
    git -C "$XDG_DATA_HOME/osuconfig/update" pull --quiet
    git -C "$XDG_DATA_HOME/osuconfig/update" reset --hard origin --quiet
    bash "$XDG_DATA_HOME/osuconfig/update/osu-winello.sh" fixyawl
    ;;

    ###################################################################################################

'--fixrpc')
    fixRpc
    ;;

    ###################################################################################################

'--osuhandler')

    OSUHANDLERPATH="$XDG_DATA_HOME/osuconfig/osu-handler-wine"

    Info "Trying to load your file/link.."
    case "$2" in
    *.osr)
        "$OSUHANDLERPATH" 'C:\\windows\\system32\\start.exe' /ProgIDOpen osustable.File.osr "$2"
        ;;
    *.osz)
        "$OSUHANDLERPATH" 'C:\\windows\\system32\\start.exe' /ProgIDOpen osustable.File.osz "$2"
        ;;
    *.osk)
        "$OSUHANDLERPATH" 'C:\\windows\\system32\\start.exe' /ProgIDOpen osustable.File.osk "$2"
        ;;
    *.osz2)
        "$OSUHANDLERPATH" 'C:\\windows\\system32\\start.exe' /ProgIDOpen osustable.File.osz2 "$2"
        ;;
    osu://*)
        "$OSUHANDLERPATH" 'C:\\windows\\system32\\start.exe' "$2"
        ;;
    *)
        Info "Unsupported osu! file.."
        ;;
    esac

    ;;

    ###################################################################################################

'--fixprefix')
    Info "Checking for internet connection.."
    ! ping -c 1 1.1.1.1 >/dev/null 2>&1 && Error "Please connect to internet before continuing xd. Run the script again"

    Info "Deleting old Wineprefix..."
    rm -rf "$WINEPREFIX"

    WINENTSYNC=0 WINEESYNC=0 WINEFSYNC=0 WINE="$YAWL_PATH" \
        winetricks -q dotnet20 dotnet48 gdiplus_winxp meiryo win2k3

    folderFix

    # Applying fix for long names/paths...
    longPathsFix

    # Re-set-up osu-handler
    osuHandlerSetup

    # Install dxvk-osu
    InstallDxvk

    # Try fixing the rpc bridge
    fixRpc

    Info "Wineprefix is now working; launch osu! with osu-wine"
    ;;

    ###################################################################################################

'--tosu')
    SetupReader 'tosu'
    ;;
'--gosumemory')
    SetupReader 'gosumemory'
    ;;

    ###################################################################################################

'--disable-memory-reader')
    if [ -f "$OSUPATH/launch_with_memory.bat" ]; then
        rm "$OSUPATH/launch_with_memory.bat"
        Info "Memory reader wrapper disabled."
    else
        Info "No memory reader wrapper was enabled."
    fi
    ;;

    ###################################################################################################

'--info')
    Info "Need info?:
    Wineprefix location: $WINEPREFIX
    osu! folder: '$OSUPATH'

    If you need to add more options to osu!, check the Launch function of the script (ex. nano $BINDIR/osu-wine)
    You can run 'osu-wine --help' to see all the script's functions (fix prefix, change dir etc.)
    You can find more troubleshooting and info at here: https://osu.ppy.sh/community/forums/topics/1248084?n=1

    If you get an error like 'Runtime Platform missing or download incomplete', try running 'osu-wine --fix-yawl'."
    ;;

    ###################################################################################################

*help*)
    Help
    ;;
*)
    Info "Unknown argument: ${1}"
    Help
    ;;
esac
