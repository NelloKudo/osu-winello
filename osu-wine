#!/usr/bin/env bash

## Welcome to your osu! launch script!
## Most stuff here is explained with comments, but if you just need to add
## any argument to osu!, use #LAUNCH_ARGS!

## If you ever need to change something to the osu! launcher besides args, just go to line ~68

LAUNCH_ARGS="env PROTONFIXES_DISABLE=1" # Use this for args like prime-run or gamemoderun!
export PRESSURE_VESSEL_FILESYSTEMS_RW= # Add your external disks paths here if you use symlinks
export WINEDEBUG=${WINEDEBUG:-}

export PROTONPATH="$HOME/.local/share/osuconfig/proton-osu"
export WINESERVER_PATH="$PROTONPATH/files/bin/wineserver"
export WINE_PATH="$PROTONPATH/files/bin/wine"
export WINETRICKS_PATH="$PROTONPATH/protontricks/winetricks"
export GAMEID="umu-727"
UMU_RUN="$PROTONPATH/umu-run"

export WINEPREFIX="$HOME/.local/share/wineprefixes/osu-wineprefix"
osuinstall=$(</"$HOME/.local/share/osuconfig/osupath")
export OSUPATH="$osuinstall"

export vblank_mode=0            # Disables vsync for mesa
export __GL_SYNC_TO_VBLANK=0    # Disables vsync for NVIDIA >=510
export WINEDLLOVERRIDES=winemenubuilder.exe=d# # Blocks wine from creating .desktop files
export WINE_ENABLE_ABS_TABLET_HACK=0 # Set this to 1 to play with absolute mode in OTD on Wayland (might cause issues with cursor, but feel free to try!)

export WINEESYNC=1 # PROTON_NO_ESYNC=1 is also needed to disable
export WINEFSYNC=1 # PROTON_NO_FSYNC=1 is also needed to disable
export WINE_BLOCK_GET_VERSION=0 # Set this to 1 to enable Windows fonts/boss key, but it might cause crashes in future updates! Revert back if so.

function Info(){
    echo -e '\033[1;34m'"Winello:\033[0m $*";
}

function Error(){
    echo -e '\033[1;31m'"Script failed:\033[0m $*"; exit 1;
}

function Help(){
    Info "Script features:
    osu-wine: Runs osu!
    osu-wine --winecfg : Runs winecfg on the osu! Wineprefix
    osu-wine --winetricks: Install packages on osu! Wineprefix
    osu-wine --regedit: Opens regedit on osu! Wineprefix
    osu-wine --kill: Kills osu! and related processes in osu! Wineprefix
    osu-wine --kill9: Kills osu! but with wineserver -k9
    osu-wine --update: Updates wine-osu to latest version
    osu-wine --fixprefix: Reinstalls the osu! Wineprefix from system
    osu-wine --info: Troubleshooting and more info
    osu-wine --remove: Uninstalls osu! and the script
    osu-wine --changedir: Changes directory of the install according to the user
    osu-wine --devserver <address>: Runs osu on with the specified devserver
    osu-wine --fixfolders: Reinstalls registry keys for native file manager in case they break
    osu-wine --fixrpc: Reinstalls rpc-bridge if needed!
    osu-wine --gosumemory: Installs and runs gosumemory without any needed config!
    osu-wine --tosu: Installs and runs tosu without any needed config!
    osu-wine --disable-memory-reader: Turn off gosumemory and tosu"
}

function Checkshort(){      # Deletes useless shortcuts created when installing
    if [ -e "$HOME/.local/share/applications/wine/Programs/osu!.desktop" ] ; then
        rm -f "$HOME/.local/share/applications/wine/Programs/osu!.desktop" ; fi

    DESKTOPDIR=$(xdg-user-dir DESKTOP)
    if [ -e "$DESKTOPDIR/osu!.lnk" ] ; then
        rm -f "$DESKTOPDIR/osu!.lnk" ; fi
}

function Update(){
    Info "Checking for Steam Runtime updates first.."
    $LAUNCH_ARGS "$UMU_RUN" wineboot -u
    $LAUNCH_ARGS "$WINESERVER_PATH" -k
    git -C "$HOME/.local/share/osuconfig/update" pull --quiet
    bash "/$HOME/.local/share/osuconfig/update/osu-winello.sh" update
}

function longPathsFix(){
    # Applying fix for long names/paths...
    rm -rf "$WINEPREFIX/dosdevices/d:"
    ln -s "$OSUPATH" "$WINEPREFIX/dosdevices/d:"
}

function SetupReader(){
    local READER_NAME="${1}"
    if [ ! -d "$HOME/.local/share/osuconfig/$READER_NAME" ]; then
        git -C "$HOME/.local/share/osuconfig/update" pull --quiet
        bash "$HOME/.local/share/osuconfig/update/osu-winello.sh" "$READER_NAME"
    fi

    Info "Setting up $READER_NAME wrapper..."
    READER_PATH="$($LAUNCH_ARGS PROTON_VERB=runinprefix "$UMU_RUN" winepath -w "$HOME/.local/share/osuconfig/$READER_NAME/$READER_NAME.exe")"
    OSU_PATH="$($LAUNCH_ARGS PROTON_VERB=runinprefix "$UMU_RUN" winepath -w "$OSUPATH/osu!.exe")"
    OSU_DIR="$($LAUNCH_ARGS PROTON_VERB=runinprefix "$UMU_RUN" winepath -w "$OSUPATH")"

    # launcher batch file which monitors osu! and closes gosumemory when osu! exits
    cat >"$OSUPATH/launch_with_memory.bat" <<EOF
@echo off
set NODE_SKIP_PLATFORM_CHECK=1
cd /d "$OSU_DIR"
start "" "$OSU_PATH" %*
start /b "" "$READER_PATH"

:loop
tasklist | find "osu!.exe" >nul
if ERRORLEVEL 1 (
    taskkill /F /IM $READER_NAME.exe >nul 2>&1
    exit
)
ping -n 5 127.0.0.1 >nul
goto loop
EOF

    Info "$READER_NAME wrapper enabled. Launch osu! normally to use it!"
}

function LaunchGame() {
    local PRE_COMMAND=("${LAUNCH_ARGS//env /}" "UMU_RUNTIME_UPDATE=0")
    local POST_COMMAND=("$UMU_RUN")
    if [ -f "$OSUPATH/launch_with_memory.bat" ]; then
        PRE_COMMAND+=("PROTON_VERB=runinprefix")
        POST_COMMAND+=("$OSUPATH/launch_with_memory.bat")
        Info "Click here to open the tosu/gosumemory page: http://localhost:24050 or http://127.0.0.1:24050"
    else
        POST_COMMAND+=("$OSUPATH"/'osu!.exe')
    fi

    if [ -n "$1" ]; then POST_COMMAND+=("-devserver" "${1}"); fi

    export PROTON_LOG=1 # only want to redirect to a file for the game
    export PROTON_LOG_DIR="$HOME/.local/share/osuconfig/"
    export WINEDEBUG="+timestamp,+pid,+tid,+seh,+unwind,+threadname,+debugstr,+loaddll,+winebrowser,+exec ${WINEDEBUG:-}"

    Info "Launching ${PRE_COMMAND[*]} ${POST_COMMAND[*]} !"
    Info "The log is located in ${PROTON_LOG_DIR}steam-${GAMEID:4}.log, should anything go wrong."

    exec env "${PRE_COMMAND[@]}" "${POST_COMMAND[@]}"
}

###################################################################################################
# Begin argument handling
###################################################################################################

case "$1" in
    '')
    LaunchGame
    Checkshort
    ;;

###################################################################################################

    '--devserver')
    if [ -z "$2" ]; then Error "You need to specify a server, e.g. --devserver akatsuki.gg"; fi
    LaunchGame "$2"
    ;;

###################################################################################################

    '--regedit')
    $LAUNCH_ARGS "$UMU_RUN" regedit
    ;;

###################################################################################################

    '--winecfg')
    $LAUNCH_ARGS "$UMU_RUN" winecfg
    ;;

###################################################################################################

    '--winetricks')
    $LAUNCH_ARGS "$UMU_RUN" winetricks "${@:2}"
    ;;

###################################################################################################

    '--changedir')
    function deleteFolder(){
        Info "Do you want to delete the previous install?"
        read -r -p "$(Info "Choose your option (y/n): ")" dirchoice

            if [ "$dirchoice" = 'y' ] || [ "$dirchoice" = 'Y' ]; then
                read -r -p "$(Info "Are you sure? This will delete your files! (y/n)")" dirchoice2

                    if [ "$dirchoice2" = 'y' ] || [ "$dirchoice2" = 'Y' ]; then
                        lastdir=$(</"$HOME/.local/share/osuconfig/osupath")
                        rm -rf "$lastdir/osu!" && Info "Cleaning done!"
                    else
                        Info "Skipping..."
                    fi

            else
                Info "Skipping.."
            fi
    }

    Info "Please choose your new directory:"

    newdir="$(zenity --file-selection --directory)"
    lastdir=$(</"$HOME/.local/share/osuconfig/osupath")

    if [ ! -d "$newdir" ]; then
        Error "No folder selected, please make sure zenity is installed.."
    fi

    rm -f "$HOME/.local/share/osuconfig/osupath"
    if [ -d "$newdir/osu!" ] || [ -s "$newdir/osu!.exe" ]; then
        Info "osu! folder/game already exists: skipping.."

        if [ -d "$newdir/osu!" ]; then
            OSUPATH="$newdir/osu!"
            echo "$OSUPATH" > "$HOME/.local/share/osuconfig/osupath"

            Info "Change done from '$lastdir' to '$newdir'!"
            deleteFolder
        fi

        if [ -s "$newdir/osu!.exe" ]; then
            OSUPATH="$newdir"
            echo "$OSUPATH" > "$HOME/.local/share/osuconfig/osupath"

            Info "Change done from '$lastdir' to '$newdir'!"
            deleteFolder
        fi
    else
        mkdir "$newdir/osu!"
        OSUPATH="$newdir/osu!"
        echo "$OSUPATH" > "$HOME/.local/share/osuconfig/osupath"

        Info "Downloading osu! to your new install.."
        wget -O "$OSUPATH/osu!.exe" "http://m1.ppy.sh/r/osu!install.exe" && wgetcheck6="$?"

        if [ ! "$wgetcheck6" = 0 ] ; then
            Info "wget failed; trying with --no-check-certificate.."
            wget --no-check-certificate -O "$OSUPATH/osu!.exe" "http://m1.ppy.sh/r/osu!install.exe" ; fi

        Info "Change done from '$lastdir' to '$newdir'!"
        deleteFolder
    fi

    longPathsFix
    ;;

###################################################################################################

    '--remove')
    bash "$HOME/.local/share/osuconfig/update/osu-winello.sh" uninstall
    ;;

###################################################################################################

    '--kill')
    "$WINESERVER_PATH" -k
    ;;

###################################################################################################

    '--kill9')
    "$WINESERVER_PATH" -k9
    ;;

###################################################################################################

    '--update')
    Update
    ;;

###################################################################################################

    '--fixfolders')
    $LAUNCH_ARGS "$UMU_RUN" reg add "HKEY_CLASSES_ROOT\folder\shell\open\command"
    $LAUNCH_ARGS "$UMU_RUN" reg delete "HKEY_CLASSES_ROOT\folder\shell\open\ddeexec" /f
    $LAUNCH_ARGS "$UMU_RUN" reg add "HKEY_CLASSES_ROOT\folder\shell\open\command" /f /ve /t REG_SZ /d "/home/$USER/.local/share/osuconfig/folderfixosu xdg-open \"%1\""
    ;;

###################################################################################################

    '--fixrpc')
    if [ ! -d "$HOME/.local/share/wineprefixes/osu-wineprefix/drive_c/windows/bridge.exe" ] ; then
        Info "Configuring rpc-bridge (Discord RPC)"
        wget -O "/tmp/bridge.zip" "https://github.com/EnderIce2/rpc-bridge/releases/download/v1.2/bridge.zip" && chk="$?"

        if [ ! "$chk" = 0 ] ; then
            Info "wget failed; trying with --no-check-certificate.."
            wget --no-check-certificate -O "/tmp/bridge.zip" "https://github.com/EnderIce2/rpc-bridge/releases/download/v1.2/bridge.zip" || Error "Download failed, check your connection or open an issue here: https://github.com/NelloKudo/osu-winello/issues"
        fi

        mkdir -p /tmp/rpc-bridge
        unzip -d /tmp/rpc-bridge -q "/tmp/bridge.zip"
        WINE_BLOCK_GET_VERSION=0 $LAUNCH_ARGS "$UMU_RUN" /tmp/rpc-bridge/bridge.exe --install
        rm -f "/tmp/bridge.zip"
        rm -rf "/tmp/rpc-bridge"
    fi
    ;;

###################################################################################################

    '--fixprefix')
    Info "Checking for internet connection.."
    ! ping -c 1 1.1.1.1 >/dev/null 2>&1 && Error "Please connect to internet before continuing xd. Run the script again"

    Info "Deleting old Wineprefix..."
    rm -rf "$WINEPREFIX"

    export WINEPREFIX="$HOME/.local/share/wineprefixes/osu-wineprefix"

    WINEESYNC=0 WINEFSYNC=0 PROTON_NO_ESYNC=1 PROTON_NO_FSYNC=1 "$UMU_RUN" \
    winetricks dotnet20 dotnet48 gdiplus_winxp win2k3

    # Adding fixfolderosu again
    $LAUNCH_ARGS "$UMU_RUN" reg add "HKEY_CLASSES_ROOT\folder\shell\open\command"
    $LAUNCH_ARGS "$UMU_RUN" reg delete "HKEY_CLASSES_ROOT\folder\shell\open\ddeexec" /f
    $LAUNCH_ARGS "$UMU_RUN" reg add "HKEY_CLASSES_ROOT\folder\shell\open\command" /f /ve /t REG_SZ /d "/home/$USER/.local/share/osuconfig/folderfixosu xdg-open \"%1\""

    # Applying fix for long names/paths...
    longPathsFix

    if [ ! -d "$HOME/.local/share/wineprefixes/osu-wineprefix/drive_c/windows/bridge.exe" ] ; then
        Info "Configuring rpc-bridge (Discord RPC)"
        wget -O "/tmp/bridge.zip" "https://github.com/EnderIce2/rpc-bridge/releases/download/v1.2/bridge.zip" && chk="$?"

        if [ ! "$chk" = 0 ] ; then
            Info "wget failed; trying with --no-check-certificate.."
            wget --no-check-certificate -O "/tmp/bridge.zip" "https://github.com/EnderIce2/rpc-bridge/releases/download/v1.2/bridge.zip" || Error "Download failed, check your connection or open an issue here: https://github.com/NelloKudo/osu-winello/issues"
        fi

        mkdir -p /tmp/rpc-bridge
        unzip -d /tmp/rpc-bridge -q "/tmp/bridge.zip"
        WINE_BLOCK_GET_VERSION=0 $LAUNCH_ARGS "$UMU_RUN" /tmp/rpc-bridge/bridge.exe --install
        rm -f "/tmp/bridge.zip"
        rm -rf "/tmp/rpc-bridge"
    fi

    Info "Wineprefix is now working; launch osu! with osu-wine"
    ;;

###################################################################################################

    '--tosu')
    SetupReader 'tosu'
    ;;
    '--gosumemory')
    SetupReader 'gosumemory'
    ;;

###################################################################################################

    '--disable-memory-reader')
    if [ -f "$OSUPATH/launch_with_memory.bat" ]; then
        rm "$OSUPATH/launch_with_memory.bat"
        Info "Memory reader wrapper disabled."
    else
        Info "No memory reader wrapper was enabled."
    fi
    ;;

###################################################################################################

    '--info')
    Info "Need info?:
    Wineprefix location: $WINEPREFIX
    osu! folder: '$OSUPATH'

    If you need to add more options to osu!, see around line 77 of the script (ex. nano ~/.local/bin/osu-wine)
    You can run 'osu-wine --help' to see all the script's functions (fix prefix, w10 fonts etc.)
    You can find more troubleshooting and info at here: https://osu.ppy.sh/community/forums/topics/1248084?n=1"
    ;;

###################################################################################################

    '--help')
    Help
    ;;

###################################################################################################

    'help')
    Help
    ;;

esac
