#!/usr/bin/env bash
Info()
{
    echo -e '\033[1;34m'"Winello:\033[0m $*";
}

Error()
{  
    echo -e '\033[1;31m'"Script failed:\033[0m $*"; exit 1;
}

## Welcome to your osu! launch script!
## Most stuff here is explained with comments, but if you just need to add
## something to osu (example: adding gamemode) see line ~94, you'll find the osu! launcher there.

export WINEESYNC=1 # Enables esync (when possible)
export WINEFSYNC=1 # Enables fsync (when possible)
export WINE_BLOCK_GET_VERSION=1 # Hides wine ver. thanks to oglfreak's patch
export PATH="$HOME/.local/share/osuconfig/wine-osu/bin:$PATH" #Path to wine-osu
export WINEARCH=win64
export WINEPREFIX="$HOME/.local/share/wineprefixes/osu-wineprefix"
osuinstall=$(</"$HOME/.local/share/osuconfig/osupath")
export OSUPATH="$osuinstall"
export vblank_mode=0            # Disables vsync for mesa
export __GL_SYNC_TO_VBLANK=0    # Disables vsync for NVIDIA >=510
export WINEDLLOVERRIDES=winemenubuilder.exe=d# # Blocks wine from creating .desktop files

Help()
{
    Info "Script features:
    osu-wine: Runs osu!
    osu-wine --winecfg : Runs winecfg on the osu! Wineprefix
    osu-wine --winetricks: Install packages on osu! Wineprefix
    osu-wine --regedit: Opens regedit on osu! Wineprefix
    osu-wine --kill: Kills osu! and related processes in osu! Wineprefix
    osu-wine --kill9: Kills osu! but with wineserver -k9
    osu-wine --update: Updates wine-osu to latest version
    osu-wine --w10fonts: Installs Windows 10 fonts from either GitHub or ISO (Needed to fix P characters etc.)
    osu-wine --fixprefix: Reinstalls the osu! Wineprefix from system
    osu-wine --info: Troubleshooting and more info
    osu-wine --remove: Uninstalls osu! and the script
    osu-wine --lutris: Copies wine-osu to lutris and shows instructions to add osu! there
    osu-wine --changedir: Changes directory of the install according to the user
    osu-wine --devserver <address>: Runs osu on with the specified devserver
    osu-wine --fixfolders: Reinstalls registry keys for native file manager in case they break
    osu-wine --fixsteamdeck: Reinstalls game dependencies after SteamOS updates"
}

Checkshort()
{
    if [ -e "$HOME/.local/share/applications/wine/Programs/osu!.desktop" ] ; then
    rm -f "$HOME/.local/share/applications/wine/Programs/osu!.desktop" ; fi

    DESKTOPDIR=$(xdg-user-dir DESKTOP)
    if [ -e "$DESKTOPDIR/osu!.lnk" ] ; then
    rm -f "$DESKTOPDIR/osu!.lnk" ; fi
}

Update()
{
    git -C "$HOME/.local/share/osuconfig/update" pull --quiet
    bash "/$HOME/.local/share/osuconfig/update/osu-winello.sh" update
}

case "$1" in
    '')
	wine "$OSUPATH/osu!.exe" #osu! launcher
	Checkshort
	;;

    '--devserver')
    wine "$OSUPATH/osu!.exe" -devserver "$2" #osu! launcher with specified devserver
    Checkshort
    ;;

    '--regedit')
    regedit
    ;;

  	'--winecfg')
    winecfg
	;;

	'--winetricks')
	winetricks "${@:2}"
	;;

    '--changedir')
    Info "Please choose your new directory:"

    newdir="$(zenity --file-selection --directory)"
    lastdir=$(</"$HOME/.local/share/osuconfig/osupath")
    rm -f "$HOME/.local/share/osuconfig/osupath"

    if [ -d "$newdir/osu!" ] || [ -s "$newdir/osu!.exe" ]; then
        Info "osu! folder/game already exists: skipping.."

    if [ -d "$newdir/osu!" ]; then
        OSUPATH="$newdir/osu!"
        echo "$OSUPATH" > "$HOME/.local/share/osuconfig/osupath"

    Info "Change done from '$lastdir' to '$newdir'!"

    Info "Do you want to delete the previous install?"
    read -r -p "$(Info "Choose your option (y/n): ")" dirchoice
    if [ "$dirchoice" = 'y' ] || [ "$dirchoice" = 'Y' ]; then
        read -r -p "$(Info "Are you sure? This will delete your files! (y/n)")" dirchoice2
        if [ "$dirchoice2" = 'y' ] || [ "$dirchoice2" = 'Y' ]; then
        rm -rf "$lastdir/osu!" && Info "Cleaning done!" ; else Info "Skipping..." ; fi
    else
        Info "Skipping.." ; fi ; fi

    if [ -s "$newdir/osu!.exe" ]; then
        OSUPATH="$newdir"
        echo "$OSUPATH" > "$HOME/.local/share/osuconfig/osupath"

    Info "Change done from '$lastdir' to '$newdir'!"

    Info "Do you want to delete the previous install?"
    read -r -p "$(Info "Choose your option (y/n): ")" dirchoice
    if [ "$dirchoice" = 'y' ] || [ "$dirchoice" = 'Y' ]; then
        read -r -p "$(Info "Are you sure? This will delete your files! (y/n)")" dirchoice2
        if [ "$dirchoice2" = 'y' ] || [ "$dirchoice2" = 'Y' ]; then
            rm -rf "$lastdir/osu!" && Info "Cleaning done!" ; else Info "Skipping..." ; fi
        else
            Info "Skipping.." ; fi ; fi
    else
        mkdir "$newdir/osu!"
        OSUPATH="$newdir/osu!"
        echo "$OSUPATH" > "$HOME/.local/share/osuconfig/osupath"

        Info "Downloading osu! to your new install.."
        wget -O "$OSUPATH/osu!.exe" "http://m1.ppy.sh/r/osu!install.exe" && wgetcheck6="$?"

        if [ ! "$wgetcheck6" = 0 ] ; then
            Info "wget failed; trying with --no-check-certificate.."
            wget --no-check-certificate -O "$OSUPATH/osu!.exe" "http://m1.ppy.sh/r/osu!install.exe" ; fi

        Info "Change done from '$lastdir' to '$newdir'!"

        Info "Do you want to delete the previous install?"
        read -r -p "$(Info "Choose your option (y/n): ")" dirchoice
        if [ "$dirchoice" = 'y' ] || [ "$dirchoice" = 'Y' ]; then
            read -r -p "$(Info "Are you sure? This will delete your files! (y/n)")" dirchoice2
            if [ "$dirchoice2" = 'y' ] || [ "$dirchoice2" = 'Y' ]; then
                rm -rf "$lastdir/osu!" && Info "Cleaning done!" ; else Info "Skipping..." ; fi
            else
                Info "Skipping.." ; fi
        fi
    ;;

    '--remove')
    bash "$HOME/.local/share/osuconfig/update/osu-winello.sh" uninstall
    ;;

    '--kill')
    wineserver -k
    ;;

    '--kill9')
    wineserver -k9
    ;;

	'--update')
	Update
	;;
    
    '--fixsteamdeck')
    
    osid=$(grep -oP '(?<=^ID=).+' /etc/os-release | tr -d '"')

    if [ "$osid" != "steamos" ] ; then
        Info "Your PC isn't really a Steam Deck, no need to use this c.c" && exit 1
    else
    
     check=$(sudo touch -c /usr/ 2>&1)
    if echo "$check" | grep -q "touch: setting times of '/usr/': Read-only file system"; then
      Error  '\033[1;31m'"The Steam Deck's file system is in read-only mode, preventing further action. To continue, you must disable read-only mode. More information can be found on GitHub.\033[0m"
    exit 1
    else
    Info "Installing needed packages for Steam Deck.."
       sudo pacman --needed -Sy libxcomposite lib32-libxcomposite gnutls lib32-gnutls wine winetricks || Error "Check your connection or make sure you disabled read-only file system (read more at GitHub)"
  fi
        
    fi    
    ;;

    '--lutris')
    if [ -d "$HOME/.local/share/lutris" ]; then
      Info "Lutris was found, do you want to copy wine-osu there? (y/n)"
      read -r -p "$(Info "Choose your option: ")" lutrischoice
        if [ "$lutrischoice" = 'y' ] || [ "$lutrischoice" = 'Y' ]; then

            mkdir -p "$HOME/.local/share/lutris/runners/wine"
            if [ -d "$HOME/.local/share/lutris/runners/wine/wine-osu" ]; then
                Info "wine-osu is already installed in Lutris, skipping..."
            else
                cp -r "$HOME/.local/share/osuconfig/wine-osu" "$HOME/.local/share/lutris/runners/wine" ; fi

            if [ -d "$HOME/.var/app/net.lutris.Lutris/data/lutris" ]; then
                mkdir -p "$HOME/.var/app/net.lutris.Lutris/data/lutris/runners/wine"
                if [ -d "$HOME/.var/app/net.lutris.Lutris/data/lutris/runners/wine/wine-osu" ]; then
                  Info "wine-osu is already installed in Flatpak Lutris, skipping..."
                else
                  cp -r "$HOME/.local/share/osuconfig/wine-osu" "$HOME/.var/app/net.lutris.Lutris/data/lutris/runners/wine" ; fi
            fi

        else
          Info "Lutris not detected; if you installed it, launch it at least once." ; fi
    fi

    if [ -d "$HOME/.var/app/net.lutris.Lutris/data/lutris" ] && [ ! -d "$HOME/.var/app/net.lutris.Lutris/data/lutris/runners/wine/wine-osu" ]; then
      Info "Flatpak Lutris was found, do you want to copy wine-osu there? (y/n)"
      read -r -p "$(Info "Choose your option: ")" lutrischoice2
        if [ "$lutrischoice2" = 'y' ] || [ "$lutrischoice2" = 'Y' ]; then
        
          mkdir -p "$HOME/.var/app/net.lutris.Lutris/data/lutris/runners/wine"
          if [ -d "$HOME/.var/app/net.lutris.Lutris/data/lutris/runners/wine/wine-osu" ]; then
              Info "wine-osu is already installed in Flatpak Lutris, skipping..."
          else
              cp -r "$HOME/.local/share/osuconfig/wine-osu" "$HOME/.var/app/net.lutris.Lutris/data/lutris/runners/wine" ; fi
        fi
    fi
 
    if [ -d "$HOME/.var/app/net.lutris.Lutris/data/lutris/runners/wine/wine-osu" ] || [ -d "$HOME/.local/share/lutris/runners/wine/wine-osu" ]; then
        Info "Instructions to add osu! to Lutris..

        Add a new game by pressing '+' on the top left > add locally
        installed game

        Choose osu! as name and set Wine as runner in Game info
        Then just paste the following in Game options:

        - Executable: $OSUPATH/osu!.exe
        - Working directory: $OSUPATH
        - Wine prefix: $WINEPREFIX

        In runner options, select 'wine-osu' as Wine version
        and disable DXVK/VKD3D

        Last but not least, select 'disable desktop effects' in
        system options.

        You're done! Just save and play e.e"
    fi
    ;;

    '--fixfolders')
    WINEPREFIX="$HOME/.local/share/wineprefixes/osu-wineprefix" wine reg add "HKEY_CLASSES_ROOT\folder\shell\open\command"
    WINEPREFIX="$HOME/.local/share/wineprefixes/osu-wineprefix" wine reg delete "HKEY_CLASSES_ROOT\folder\shell\open\ddeexec" /f
    WINEPREFIX="$HOME/.local/share/wineprefixes/osu-wineprefix" wine reg add "HKEY_CLASSES_ROOT\folder\shell\open\command" /f /ve /t REG_SZ /d "/home/$USER/.local/share/osuconfig/folderfixosu xdg-open \"%1\""
    ;;


    '--w10fonts')
    git -C "$HOME/.local/share/osuconfig/update" pull --quiet
    bash "$HOME/.local/share/osuconfig/update/osu-winello.sh" w10fonts
    ;;

    '--fixprefix')
    Info "Checking for internet connection.."
    ! ping -c 1 1.1.1.1 >/dev/null 2>&1 && Error "Please connect to internet before continuing xd. Run the script again"
    
    Info "Deleting old Wineprefix..."
    rm -rf $WINEPREFIX

    Info "Downloading latest Winetricks.. (to prevent issues)"
    rm "$HOME/.local/share/osuconfig/winetricks"
    (wget -O "$HOME/.local/share/osuconfig/winetricks" https://raw.githubusercontent.com/Winetricks/winetricks/master/src/winetricks && chmod +x "$HOME/.local/share/osuconfig/winetricks") || Error "Downloading Winetricks failed, try again later.."

    "$HOME/.local/share/osuconfig/winetricks" -q -f dotnet48 gdiplus_winxp comctl32
    "$HOME/.local/share/osuconfig/winetricks" -q win2k3
    wine reg add "HKEY_CURRENT_USER\Software\Wine\DllOverrides" /v winemenubuilder /t REG_SZ /d ""
    wine reg add "HKEY_CLASSES_ROOT\folder\shell\open\command"
    wine reg delete "HKEY_CLASSES_ROOT\folder\shell\open\ddeexec" /f
    wine reg add "HKEY_CLASSES_ROOT\folder\shell\open\command" /f /ve /t REG_SZ /d "/home/$USER/.local/bin/folderfixosu xdg-open \"%1\""

    if [ ! -d "$WINEPREFIX/drive_c/winestreamproxy" ] ; then
        Info "Configuring Winestreamproxy (Discord RPC)"
        wget --no-check-certificate "https://github.com/openglfreak/winestreamproxy/releases/download/v2.0.3/winestreamproxy-2.0.3-amd64.tar.gz" --output-document "/tmp/winestreamproxy-2.0.3-amd64.tar.gz"
        mkdir -p "/tmp/winestreamproxy"
        tar -xf "/tmp/winestreamproxy-2.0.3-amd64.tar.gz" -C "/tmp/winestreamproxy"
        WINE="$HOME/.local/share/osuconfig/wine-osu/bin/wine" bash "/tmp/winestreamproxy/install.sh"
        rm -f "/tmp/winestreamproxy-2.0.3-amd64.tar.gz"
        rm -rf "/tmp/winestreamproxy" ; fi

    Info "Wineprefix is now working; launch osu! with osu-wine"
    ;;

    '--info')
    Info "Need info?:
    Wineprefix location: $WINEPREFIX
    osu! folder: '$OSUPATH'

    If you need to add more options to osu!, see around line 86 of the script (ex. nano ~/.local/bin/osu-wine)

    You can run 'osu-wine help' to see all the script's functions (fix prefix, w10 fonts etc.)
    You can find more troubleshooting and info at here: https://osu.ppy.sh/community/forums/topics/1248084?n=1"
    ;;

	'help')
	Help
	;;

    '--help')
    Help
    ;;

esac
