#!/usr/bin/env bash

## Welcome to your osu! launch script!
## Most stuff here is explained with comments, but if you just need to add
## any argument to osu!, use #LAUNCH_ARGS!

## If you ever need to change something to the osu! launcher besides args, just go to line ~68

LAUNCH_ARGS="env PROTONFIXES_DISABLE=1"                                   # Use this for args like prime-run or gamemoderun!
export PRESSURE_VESSEL_FILESYSTEMS_RW=${PRESSURE_VESSEL_FILESYSTEMS_RW:-} # Set this to your external disk paths if you use symlinks!
export WINEDEBUG=${WINEDEBUG:-}

export XDG_DATA_HOME="${XDG_DATA_HOME:-$HOME/.local/share}"
export BINDIR="${BINDIR:-$HOME/.local/bin}"

export PROTONPATH="$XDG_DATA_HOME/kawataconfig/proton-osu"
export WINESERVER_PATH="$PROTONPATH/files/bin/wineserver"
export WINE_PATH="$PROTONPATH/files/bin/wine"
export WINETRICKS_PATH="$PROTONPATH/protontricks/winetricks"
export GAMEID="umu-727"
UMU_RUN="$PROTONPATH/umu-run"

export WINEPREFIX="$XDG_DATA_HOME/wineprefixes/kosu-wineprefix"
osuinstall=$(</"$XDG_DATA_HOME/kawataconfig/kawatapath")
export kawatapath="$osuinstall"

export vblank_mode=0                           # Disables vsync for mesa
export __GL_SYNC_TO_VBLANK=0                   # Disables vsync for NVIDIA >=510
export WINEDLLOVERRIDES=winemenubuilder.exe=d# # Blocks wine from creating .desktop files
export WINE_ENABLE_ABS_TABLET_HACK=0           # Set this to 1 to play with absolute mode in OTD on Wayland (might cause issues with cursor, but feel free to try!)

export WINEESYNC=1                                   # PROTON_NO_ESYNC=1 is also needed to disable
export WINEFSYNC=1                                   # PROTON_NO_FSYNC=1 is also needed to disable
export WINE_BLOCK_GET_VERSION=0                      # Set this to 1 to enable Windows fonts/boss key, but it might cause crashes in future updates! Revert back if so.
export WINE_DISABLE_VK_CHILD_WINDOW_RENDERING_HACK=1 # Fixes compat. mode crashing after Proton-osu-9-15

###################################################################################################
# Helper functions and variables for the launcher script
###################################################################################################

OSUDOWNLOADURL="https://m1.ppy.sh/r/osu!install.exe"

Info() {
    echo -e '\033[1;34m'"Winello:\033[0m $*"
}

Warning() {
    echo -e '\033[0;33m'"Winello:\033[0m $*"
}

Error() {
    echo -e '\033[1;31m'"Script failed:\033[0m $*"
    exit 1
}

Help() {
    Info "Script features:
    kosu-wine: Runs osu!
    kosu-wine --winecfg : Runs winecfg on the osu! Wineprefix
    kosu-wine --winetricks: Install packages on osu! Wineprefix
    kosu-wine --regedit: Opens regedit on osu! Wineprefix
    kosu-wine --kill: Kills osu! and related processes in osu! Wineprefix
    kosu-wine --kill9: Kills osu! but with wineserver -k9
    kosu-wine --update: Updates proton-osu (and optionally, the kosu-wine script) to upstream
    kosu-wine --fixprefix: Reinstalls the osu! Wineprefix from system
    kosu-wine --fix-umu: Reinstalls files related to umu-launcher in case something went wrong
    kosu-wine --fixfolders: Reinstalls registry keys for native file manager in case they break
    kosu-wine --fixrpc: Reinstalls rpc-bridge if needed!
    kosu-wine --info: Troubleshooting and more info
    kosu-wine --remove: Uninstalls osu! and the script
    kosu-wine --changedir: Changes directory of the install according to the user
    kosu-wine --devserver <address>: Runs osu with an alternative server (e.g. --devserver akatsuki.gg)
    kosu-wine --runinprefix <file>: Launches a custom executable within osu!'s Wineprefix
    kosu-wine --osuhandler <beatmap, skin..>: Launches osu-handler-wine with the specified file/link
    kosu-wine --gosumemory: Installs and runs gosumemory without any needed config!
    kosu-wine --tosu: Installs and runs tosu without any needed config!
    kosu-wine --disable-memory-reader: Turn off gosumemory and tosu"
}

deleteFolder() {
    Info "Do you want to delete the previous install?"
    read -r -p "$(Info "Choose your option (y/N): ")" dirchoice

    if [ "$dirchoice" = 'y' ] || [ "$dirchoice" = 'Y' ]; then
        read -r -p "$(Info "Are you sure? This will delete your files! (y/N)")" dirchoice2

        if [ "$dirchoice2" = 'y' ] || [ "$dirchoice2" = 'Y' ]; then
            lastdir=$(</"$XDG_DATA_HOME/kawataconfig/kawatapath")
            rm -rf "$lastdir/osu!" && Info "Cleaning done!"
        else
            Info "Skipping..."
        fi

    else
        Info "Skipping.."
    fi
}

Update() {
    Info "Checking for Steam Runtime updates first.."
    $LAUNCH_ARGS "$UMU_RUN" wineboot -u
    $LAUNCH_ARGS "$WINESERVER_PATH" -k
    local self
    self="$(realpath "$0")"
    git -C "$XDG_DATA_HOME/kawataconfig/update" pull --quiet
    exec bash "$XDG_DATA_HOME/kawataconfig/update/kosu-winello.sh" update "${self}"
}

longPathsFix() {
    # Applying fix for long names/paths...
    rm -rf "$WINEPREFIX/dosdevices/d:"
    ln -s "$kawatapath" "$WINEPREFIX/dosdevices/d:"
}

osuHandlerSetup() {
    # Fix to importing maps/skins/osu links after Stable update 20250122.1
    # This assumes the osu! folder is mounted at the D: drive (which Winello does in longPathsFix)
    git -C "$XDG_DATA_HOME/kawataconfig/update" pull --quiet
    bash "$XDG_DATA_HOME/kawataconfig/update/kosu-winello.sh" osuhandler
}

folderFix() {
    # Applying fix for opening folders in the native file browser...
    git -C "$XDG_DATA_HOME/kawataconfig/update" pull --quiet
    bash "$XDG_DATA_HOME/kawataconfig/update/kosu-winello.sh" fixfolders
}

fixRpc() {
    # reinstall discord rpc bridge
    if [ ! -f "${WINEPREFIX}/drive_c/windows/bridge.exe" ]; then
        git -C "$XDG_DATA_HOME/kawataconfig/update" pull --quiet
    fi
    bash "$XDG_DATA_HOME/kawataconfig/update/kosu-winello.sh" discordrpc
}

SetupReader() {
    local READER_NAME="${1}"
    if [ ! -d "$XDG_DATA_HOME/kawataconfig/$READER_NAME" ]; then
        git -C "$XDG_DATA_HOME/kawataconfig/update" pull --quiet
        bash "$XDG_DATA_HOME/kawataconfig/update/kosu-winello.sh" "$READER_NAME"
    fi

    Info "Setting up $READER_NAME wrapper..."
    READER_PATH="$($LAUNCH_ARGS PROTON_VERB=runinprefix "$UMU_RUN" winepath -w "$XDG_DATA_HOME/kawataconfig/$READER_NAME/$READER_NAME.exe")"
    OSU_PATH="$($LAUNCH_ARGS PROTON_VERB=runinprefix "$UMU_RUN" winepath -w "$kawatapath/osu!.exe")"
    OSU_DIR="$($LAUNCH_ARGS PROTON_VERB=runinprefix "$UMU_RUN" winepath -w "$kawatapath")"

    # launcher batch file which monitors osu! and closes gosumemory when osu! exits
    cat >"$kawatapath/launch_with_memory.bat" <<EOF
@echo off
set NODE_SKIP_PLATFORM_CHECK=1
cd /d "$OSU_DIR"
start "" "$OSU_PATH" %*
start /b "" "$READER_PATH"

:loop
tasklist | find "osu!.exe" >nul
if ERRORLEVEL 1 (
    taskkill /F /IM $READER_NAME.exe >nul 2>&1
    exit
)
ping -n 5 127.0.0.1 >nul
goto loop
EOF

    Info "$READER_NAME wrapper enabled. Launch osu! normally to use it!"
}

LaunchGame() {
    local PRE_COMMAND=("${LAUNCH_ARGS//env /}" "UMU_RUNTIME_UPDATE=0")
    local POST_COMMAND=("$UMU_RUN")
    if [ -f "$kawatapath/launch_with_memory.bat" ]; then
        PRE_COMMAND+=("PROTON_VERB=runinprefix")
        POST_COMMAND+=("$kawatapath/launch_with_memory.bat")
        Info "Click here to open the tosu/gosumemory page: http://localhost:24050 or http://127.0.0.1:24050"
    else
        POST_COMMAND+=("$kawatapath"/'osu!.exe')
    fi

    if [ -n "$1" ]; then POST_COMMAND+=("-devserver" "${1}"); fi

    export PROTON_LOG=1 # only want to redirect to a file for the game
    export PROTON_LOG_DIR="$XDG_DATA_HOME/kawataconfig/"
    export WINEDEBUG="+timestamp,+pid,+tid,+seh,+unwind,+threadname,+debugstr,+loaddll,+winebrowser,+exec ${WINEDEBUG:-}"

    Info "Launching ${PRE_COMMAND[*]} ${POST_COMMAND[*]} !"
    Info "The log is located in ${PROTON_LOG_DIR}steam-${GAMEID:4}.log, should anything go wrong."

    exec env "${PRE_COMMAND[@]}" "${POST_COMMAND[@]}"
}

###################################################################################################
# Begin argument handling
###################################################################################################

case "$1" in
'')
    LaunchGame
    Checkshort
    ;;

    ###################################################################################################

'--devserver')
    if [ -z "$2" ]; then Error "You need to specify a server, e.g. --devserver akatsuki.gg"; fi
    LaunchGame "$2"
    ;;

    ###################################################################################################

'--regedit')
    $LAUNCH_ARGS "$UMU_RUN" regedit
    ;;

    ###################################################################################################

'--winecfg')
    $LAUNCH_ARGS "$UMU_RUN" winecfg
    ;;

    ###################################################################################################

'--winetricks')
    $LAUNCH_ARGS "$UMU_RUN" winetricks "${@:2}"
    ;;

    ###################################################################################################

'--changedir')
    Info "Please choose your new directory:"

    newdir="$(zenity --file-selection --directory)"
    lastdir=$(</"$XDG_DATA_HOME/kawataconfig/kawatapath")

    if [ ! -d "$newdir" ]; then
        Error "No folder selected, please make sure zenity is installed.."
    fi

    rm -f "$XDG_DATA_HOME/kawataconfig/kawatapath"
    if [ -d "$newdir/osu!" ] || [ -s "$newdir/osu!.exe" ]; then
        Info "osu! folder/game already exists: skipping.."

        if [ -d "$newdir/osu!" ]; then
            kawatapath="$newdir/osu!"
            echo "$kawatapath" >"$XDG_DATA_HOME/kawataconfig/kawatapath"

            Info "Change done from '$lastdir' to '$newdir'!"
            deleteFolder
        fi

        if [ -s "$newdir/osu!.exe" ]; then
            kawatapath="$newdir"
            echo "$kawatapath" >"$XDG_DATA_HOME/kawataconfig/kawatapath"

            Info "Change done from '$lastdir' to '$newdir'!"
            deleteFolder
        fi
    else
        mkdir "$newdir/osu!"
        kawatapath="$newdir/osu!"
        echo "$kawatapath" >"$XDG_DATA_HOME/kawataconfig/kawatapath"

        Info "Downloading osu! to your new install.."
        wget -O "$kawatapath/osu!.exe" "${OSUDOWNLOADURL}" && wgetcheck6="$?"

        if [ ! "$wgetcheck6" = 0 ]; then
            Info "wget failed; trying with --no-check-certificate.."
            wget --no-check-certificate -O "$kawatapath/osu!.exe" "${OSUDOWNLOADURL}"
        fi

        Info "Change done from '$lastdir' to '$newdir'!"
        deleteFolder
    fi

    longPathsFix
    ;;

    ###################################################################################################

'--remove')
    bash "$XDG_DATA_HOME/kawataconfig/update/kosu-winello.sh" uninstall
    ;;

    ###################################################################################################

'--kill')
    "$WINESERVER_PATH" -k
    ;;

    ###################################################################################################

'--kill9')
    "$WINESERVER_PATH" -k9
    ;;

    ###################################################################################################

'--update')
    Update
    ;;

    ###################################################################################################

'--fixfolders')
    folderFix
    ;;

    ###################################################################################################

*fix*umu*)
    git -C "$XDG_DATA_HOME/kawataconfig/update" pull --quiet
    bash "$XDG_DATA_HOME/kawataconfig/update/kosu-winello.sh" fixumu
    ;;

    ###################################################################################################

'--fixrpc')
    fixRpc
    ;;

    ###################################################################################################

'--osuhandler')

    OSUHANDLERPATH="$XDG_DATA_HOME/kawataconfig/osu-handler-wine"

    Info "Trying to load your file/link.."
    case "$2" in
    *.osr)
        "$OSUHANDLERPATH" 'C:\\windows\\system32\\start.exe' /ProgIDOpen osustable.File.osr "$2"
        ;;
    *.osz)
        "$OSUHANDLERPATH" 'C:\\windows\\system32\\start.exe' /ProgIDOpen osustable.File.osz "$2"
        ;;
    *.osk)
        "$OSUHANDLERPATH" 'C:\\windows\\system32\\start.exe' /ProgIDOpen osustable.File.osk "$2"
        ;;
    *.osz2)
        "$OSUHANDLERPATH" 'C:\\windows\\system32\\start.exe' /ProgIDOpen osustable.File.osz2 "$2"
        ;;
    osu://*)
        "$OSUHANDLERPATH" 'C:\\windows\\system32\\start.exe' "$2"
        ;;
    *)
        Info "Unsupported osu! file.."
        ;;
    esac

    ;;

    ###################################################################################################

'--runinprefix')

    export PROTON_VERB=runinprefix
    Info "Launching your custom executable: $2.."
    $LAUNCH_ARGS "$UMU_RUN" "$2"
    ;;

    ###################################################################################################

'--fixprefix')
    Info "Checking for internet connection.."
    ! ping -c 1 1.1.1.1 >/dev/null 2>&1 && Error "Please connect to internet before continuing xd. Run the script again"

    Info "Deleting old Wineprefix..."
    rm -rf "$WINEPREFIX"

    WINEESYNC=0 WINEFSYNC=0 PROTON_NO_ESYNC=1 PROTON_NO_FSYNC=1 "$UMU_RUN" \
        winetricks dotnet20 dotnet48 gdiplus_winxp meiryo win2k3

    folderFix

    # Applying fix for long names/paths...
    longPathsFix

    # Re-set-up osu-handler
    osuHandlerSetup

    # Try fixing the rpc bridge
    fixRpc

    Info "Wineprefix is now working; launch osu! with kosu-wine"
    ;;

    ###################################################################################################

'--tosu')
    SetupReader 'tosu'
    ;;
'--gosumemory')
    SetupReader 'gosumemory'
    ;;

    ###################################################################################################

'--disable-memory-reader')
    if [ -f "$kawatapath/launch_with_memory.bat" ]; then
        rm "$kawatapath/launch_with_memory.bat"
        Info "Memory reader wrapper disabled."
    else
        Info "No memory reader wrapper was enabled."
    fi
    ;;

    ###################################################################################################

'--info')
    Info "Need info?:
    Wineprefix location: $WINEPREFIX
    osu! folder: '$kawatapath'

    If you need to add more options to osu!, check the LaunchGame function of the script (ex. nano $BINDIR/kosu-wine)
    You can run 'kosu-wine --help' to see all the script's functions (fix prefix, change dir etc.)
    You can find more troubleshooting and info at here: https://osu.ppy.sh/community/forums/topics/1248084?n=1

    If you get an error like 'Runtime Platform missing or download incomplete', try running 'kosu-wine --fix-umu'."
    ;;

    ###################################################################################################

*help*)
    Help
    ;;
*)
    Info "Unknown argument: ${1}"
    Help
    ;;
esac
